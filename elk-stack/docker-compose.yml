services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: elasticsearch
    restart: always
    environment:
      - cluster.name=${CLUSTER_NAME}
      - es_java_opts=-Xms512m -Xmx512m
      - discovery.type=single-node
      - xpack.security.enabled=false # if set it true then it will not connect with kibana
      - xpack.security.enrollment.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}  # Replace with a secure password
      - bootstrap.memory_lock=true
    ports:
      - "${ES_PORT}:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl -u elastic:$${ELASTIC_PASSWORD} -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: kibana
    restart: always
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#      - ELASTICSEARCH_SERVICE_TOKEN=${ELASTICSEARCH_SERVICE_TOKEN}  # Use service account token
    ports:
      - "${KIBANA_PORT}:5601"
    volumes:
      - kibana-data:/usr/share/kibana/data
    healthcheck:
      test: [ "CMD-SHELL", "curl -f localhost:5601/api/status || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - elk

volumes:
  es-data:
    driver: local
  kibana-data:
    driver: local

networks:
  elk:
    driver: bridge